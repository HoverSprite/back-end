Subject: [PATCH] mail refactored
---
Index: hoversprite-application/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hoversprite-application/pom.xml b/hoversprite-application/pom.xml
--- a/hoversprite-application/pom.xml	(revision 5d737f4d037e0271e3c73ff6ce31680a4ba23fc0)
+++ b/hoversprite-application/pom.xml	(revision 6c0eb0e6c6afc6d5c3570531ff8f5dccb7378ee6)
@@ -52,6 +52,11 @@
             <artifactId>hoversprite-notification-component</artifactId>
             <version>1.0-SNAPSHOT</version>
         </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-mail</artifactId>
+        </dependency>
+
         <dependency>
             <groupId>hoversprite.project</groupId>
             <artifactId>hoversprite-spray-component</artifactId>
Index: hoversprite-message-center/hoversprite-mail-component/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hoversprite-message-center/hoversprite-mail-component/pom.xml b/hoversprite-message-center/hoversprite-mail-component/pom.xml
--- a/hoversprite-message-center/hoversprite-mail-component/pom.xml	(revision 5d737f4d037e0271e3c73ff6ce31680a4ba23fc0)
+++ b/hoversprite-message-center/hoversprite-mail-component/pom.xml	(revision 6c0eb0e6c6afc6d5c3570531ff8f5dccb7378ee6)
@@ -16,4 +16,19 @@
     <properties>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-context</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-context-support</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-mail</artifactId>
+        </dependency>
+
+    </dependencies>
 </project>
Index: hoversprite-message-center/hoversprite-mail-component/src/main/java/hoversprite/project/EmailService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hoversprite-message-center/hoversprite-mail-component/src/main/java/hoversprite/project/EmailService.java b/hoversprite-message-center/hoversprite-mail-component/src/main/java/hoversprite/project/EmailService.java
new file mode 100644
--- /dev/null	(revision 6c0eb0e6c6afc6d5c3570531ff8f5dccb7378ee6)
+++ b/hoversprite-message-center/hoversprite-mail-component/src/main/java/hoversprite/project/EmailService.java	(revision 6c0eb0e6c6afc6d5c3570531ff8f5dccb7378ee6)
@@ -0,0 +1,22 @@
+package hoversprite.project;
+
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.mail.SimpleMailMessage;
+import org.springframework.mail.javamail.JavaMailSender;
+import org.springframework.stereotype.Service;
+
+@Service
+public class EmailService {
+
+    @Autowired
+    private JavaMailSender emailSender;
+
+    public void sendSimpleMessage(String to, String subject, String text) {
+        SimpleMailMessage message = new SimpleMailMessage();
+        message.setTo(to);
+        message.setSubject(subject);
+        message.setText(text);
+        emailSender.send(message);
+    }
+}
\ No newline at end of file
Index: hoversprite-partner/hoversprite-partner-component/src/main/java/hoversprite/project/partner/PersonGlobalService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hoversprite-partner/hoversprite-partner-component/src/main/java/hoversprite/project/partner/PersonGlobalService.java b/hoversprite-partner/hoversprite-partner-component/src/main/java/hoversprite/project/partner/PersonGlobalService.java
--- a/hoversprite-partner/hoversprite-partner-component/src/main/java/hoversprite/project/partner/PersonGlobalService.java	(revision 5d737f4d037e0271e3c73ff6ce31680a4ba23fc0)
+++ b/hoversprite-partner/hoversprite-partner-component/src/main/java/hoversprite/project/partner/PersonGlobalService.java	(revision 6c0eb0e6c6afc6d5c3570531ff8f5dccb7378ee6)
@@ -16,4 +16,6 @@
     boolean isValidEmailAddress(String emailAddress);
 
     List<PersonDTO> getUserByIds(List<Long> ids);
+
+
 }
Index: hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/pom.xml b/hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/pom.xml
--- a/hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/pom.xml	(revision 5d737f4d037e0271e3c73ff6ce31680a4ba23fc0)
+++ b/hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/pom.xml	(revision 6c0eb0e6c6afc6d5c3570531ff8f5dccb7378ee6)
@@ -134,6 +134,12 @@
             <artifactId>hibernate-core</artifactId>
             <version>6.2.0.Final</version> <!-- Ensure this is 6.2.0 or later -->
         </dependency>
+        <dependency>
+            <groupId>hoversprite.project</groupId>
+            <artifactId>hoversprite-mail-component</artifactId>
+            <version>1.0-SNAPSHOT</version>
+            <scope>compile</scope>
+        </dependency>
     </dependencies>
 
     <build>
Index: hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/src/main/java/hoversprite/project/sprayOrder/SprayOrderServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/src/main/java/hoversprite/project/sprayOrder/SprayOrderServiceImpl.java b/hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/src/main/java/hoversprite/project/sprayOrder/SprayOrderServiceImpl.java
--- a/hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/src/main/java/hoversprite/project/sprayOrder/SprayOrderServiceImpl.java	(revision 5d737f4d037e0271e3c73ff6ce31680a4ba23fc0)
+++ b/hoversprite-principle/hoversprite-main-component/hoversprite-spray-component/src/main/java/hoversprite/project/sprayOrder/SprayOrderServiceImpl.java	(revision 6c0eb0e6c6afc6d5c3570531ff8f5dccb7378ee6)
@@ -4,6 +4,7 @@
 import hoversprite.project.common.domain.PersonExpertise;
 import hoversprite.project.common.domain.PersonRole;
 import hoversprite.project.common.domain.SprayStatus;
+import hoversprite.project.EmailService;
 import hoversprite.project.partner.PersonDTO;
 import hoversprite.project.partner.PersonGlobalService;
 import hoversprite.project.request.SprayOrderRequest;
@@ -17,10 +18,11 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
-
 import java.math.BigDecimal;
 import java.util.List;
 import java.util.stream.Collectors;
+import java.time.LocalDate;
+import java.time.format.DateTimeFormatter;
 
 @Service
 @Transactional
@@ -42,6 +44,8 @@
     @Autowired
     private SprayerAssignmentGlobalService sprayerAssignmentGlobalService;
 
+    @Autowired
+    private EmailService emailService;
 //    @Autowired
 //    private NotificationService notificationService;
 
@@ -80,8 +84,6 @@
         calculateCostPerArea(sprayOrder);
 
 
-
-
         SprayOrder savedSprayOrder = sprayOrderRepository.save(sprayOrder);
         spraySessionRequest.setSprayOrder(savedSprayOrder.getId());
         SpraySessionDTO savedSpraySession = spraySession2GlobalService.save(userid, spraySessionRequest, personRole);
@@ -89,7 +91,7 @@
 
         // Save the order
         SprayOrderDTO savedOrderDTO = SprayOrderMapper.INSTANCE.toDto(sprayOrderRepository.save(savedSprayOrder));
-
+        sendConfirmationEmail(savedOrderDTO);
         // Notify the farmer about the new order
 //        notificationService.notifyFarmer(userid.longValue(), "Your order has been created successfully!");
 
@@ -251,4 +253,46 @@
     public List<SprayOrderDTO> getOrdersBySprayer(Long sprayerId) {
         return sprayOrderRepository.getOrdersBySprayer(sprayerId).stream().map(SprayOrderMapper.INSTANCE::toDto).collect(Collectors.toList());
     }
+
+    private void sendConfirmationEmail(SprayOrderDTO order) {
+        PersonDTO farmer = personGlobalService.getUserByIds(List.of(order.getFarmer())).get(0);
+        String farmerEmail = farmer.getEmailAddress();
+
+        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
+        String gregorianDate = order.getDateTime().format(formatter);
+        String lunarDate = convertToLunarDate(order.getDateTime().toLocalDate());
+
+        String emailSubject = "HoverSprite - Spray Order Confirmation";
+        String emailBody = String.format(
+                "Dear %s %s,\n\n" +
+                        "Thank you for choosing HoverSprite for your spraying needs. Your order has been successfully booked.\n\n" +
+                        "Order Details:\n" +
+                        "Date (Gregorian): %s\n" +
+                        "Date (Lunar): %s\n" +
+                        "Time: %s\n" +
+                        "Location: %s\n" +
+                        "Farmland Size: %.2f decares\n" +
+                        "Total Cost: %.2f VND\n\n" +
+                        "We appreciate your trust in HoverSprite. Our team is committed to providing you with the best service possible.\n\n" +
+                        "If you have any questions or need to make changes to your order, please don't hesitate to contact us.\n\n" +
+                        "Best regards,\n" +
+                        "The HoverSprite Team",
+                farmer.getFirstName(), farmer.getLastName(),
+                gregorianDate,
+                lunarDate,
+                order.getDateTime().format(DateTimeFormatter.ofPattern("HH:mm")),
+                order.getLocation(),
+                order.getArea().doubleValue(),
+                order.getCost()
+        );
+
+        emailService.sendSimpleMessage(farmerEmail, emailSubject, emailBody);
+    }
+
+
+    private String convertToLunarDate(LocalDate gregorianDate) {
+        // Implement the conversion from Gregorian to Lunar date here
+        // This is a placeholder and should be replaced with actual conversion logic
+        return "DD/MM/YYYY";
+    }
 }
